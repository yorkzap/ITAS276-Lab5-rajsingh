name: DevSecOps Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Step 1: Secret scanning with TruffleHog
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
  
  # Step 2: SAST scanning with Semgrep
  sast-semgrep:
    name: SAST - Semgrep
    needs: [trufflehog]  # Depends on successful secret scan
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Semgrep scan
        run: |
          semgrep \
          --sarif --output semgrep-sast.sarif \
          --metrics=off \
          --config="p/default"
      
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep-sast.sarif
          category: semgrep
      
      - name: Save report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-sast.sarif
          path: semgrep-sast.sarif
  
  # Step 3: SCA scanning with Snyk
  snyk-docker:
    name: SCA - Snyk Docker
    needs: [trufflehog]  # Depends on successful secret scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build Docker image
        run: docker build -t docker101-app:latest .
      
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          # To use this pipeline, replace this with your real token from Snyk
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          # Deliberately insecure for lab demonstration - will trigger TruffleHog
          # SNYK_TOKEN: 0984e728-ac34-43fd-ab55-97f62a800b64
        with:
          image: docker101-app:latest
          args: --file=Dockerfile --sarif-file-output=snyk-docker.sarif
        continue-on-error: true
      
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-docker.sarif
          category: snyk-docker
      
      - name: Save report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: snyk-docker.sarif
          path: snyk-docker.sarif